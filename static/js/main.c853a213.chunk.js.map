{"version":3,"sources":["components/Section/Section.jsx","components/Form/Form.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Form/Form.module.css"],"names":["Section","title","children","Form","onAdd","isUnique","useState","name","phone","contact","setContact","handleChangeContact","e","target","value","resetForm","className","styles","container","onSubmit","preventDefault","newContact","id","uuidv4","input","type","placeholder","onChange","pattern","required","button","ContactItem","onDelete","console","log","onClick","Contacts","contacts","map","Filter","App","setContacts","prevState","existingContact","find","alert","ContactsList","filter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0QASeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,sCC8DQC,EA9DF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACNC,mBAAS,CACrCC,KAAM,GACNC,MAAO,KAH2B,mBAC7BC,EAD6B,KACpBC,EADoB,KAM9BC,EAAsB,SAAAC,GAAC,OAC3BF,EAAW,2BACND,GADK,kBAEPG,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,UAgBxBC,EAAY,WAChBL,EAAW,CAAEH,KAAM,GAAIC,MAAO,MAGhC,OACE,uBAAMQ,UAAWC,IAAOC,UAAWC,SAlBZ,SAAAP,GACvBA,EAAEQ,iBACF,IAAMC,EAAa,CACjBC,GAAIC,cACJhB,KAAME,EAAQF,KACdC,MAAOC,EAAQD,OAEbH,EAASI,EAAQF,OACnBH,EAAMiB,GAERN,KAQA,UACE,uBACEC,UAAWC,IAAOO,MAClBC,KAAK,OACLlB,KAAK,OACLmB,YAAY,aACZZ,MAAOL,EAAQF,KACfoB,SAAUhB,EACViB,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,IAGV,uBACEb,UAAWC,IAAOO,MAClBC,KAAK,MACLlB,KAAK,QACLmB,YAAY,eACZZ,MAAOL,EAAQD,MACfmB,SAAUhB,EAGVkB,UAAQ,IAGV,wBAAQJ,KAAK,SAAST,UAAWC,IAAOa,OAAxC,6BChDSC,EAXK,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,QAASuB,EAAe,EAAfA,SAE9B,OADAC,QAAQC,IAAIzB,GAEV,+BACE,iCAAOA,EAAQF,KAAf,SACA,+BAAOE,EAAQD,QACf,wBAAQ2B,QAAS,kBAAMH,EAASvB,EAAQa,KAAxC,wBCOSc,EAXE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAE5B,OADAC,QAAQC,IAAIG,GAEV,6BACGA,EAASC,KAAI,SAAA7B,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,EAASuB,SAAUA,GAAxCvB,EAAQa,UCHnBiB,EAJA,WACb,OAAO,uBAAOd,KAAK,OAAOlB,KAAK,OAAOmB,YAAY,2BCqCrCc,EA/BH,WAAO,IAAD,EACgBlC,mBAAS,IADzB,mBACT+B,EADS,KACCI,EADD,KAkBhB,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,CAASf,MAAM,YAAf,SACE,cAAC,EAAD,CAAMG,MAlBa,SAAAiB,GAAU,OACjCoB,GAAY,SAAAC,GAAS,4BAAQA,GAAR,CAAmBrB,QAiBLhB,SAfX,SAAAE,GACxB,IAAMoC,IAAoBN,EAASO,MAAK,SAAAnC,GAAO,OAAIA,EAAQF,OAASA,KAEpE,OADAoC,GAAmBE,MAAM,GAAD,OAAItC,EAAJ,6BAChBoC,OAcN,eAAC,EAAD,CAAS1C,MAAM,WAAf,UACE,cAAC6C,EAAD,CAAcT,SAAUA,EAAUL,SAZZ,SAAAV,GAC1BmB,GAAY,SAAAJ,GAAQ,MAAK,CACvBA,SAAUA,EAASU,QAAO,SAAAtC,GAAO,OAAIA,EAAQa,KAAOA,YAWlD,cAAC,EAAD,WC3BR0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.c853a213.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './Form.module.css';\n\nconst Form = ({ onAdd, isUnique }) => {\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const handleChangeContact = e =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value,\n    });\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: uuidv4(),\n      name: contact.name,\n      phone: contact.phone,\n    };\n    if (isUnique(contact.name)) {\n      onAdd(newContact);\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setContact({ name: '', phone: '' });\n  };\n\n  return (\n    <form className={styles.container} onSubmit={handleFormSubmit}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={contact.name}\n        onChange={handleChangeContact}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n\n      <input\n        className={styles.input}\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter number\"\n        value={contact.phone}\n        onChange={handleChangeContact}\n        // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        // title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n      />\n\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","const ContactItem = ({ contact, onDelete }) => {\n  console.log(contact);\n  return (\n    <li>\n      <span>{contact.name} : </span>\n      <span>{contact.phone}</span>\n      <button onClick={() => onDelete(contact.id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\n\nconst Contacts = ({ contacts, onDelete }) => {\n  console.log(contacts);\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","const Filter = () => {\n  return <input type=\"text\" name=\"name\" placeholder=\"Enter name for search\" />;\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport ContactsList from './components/Contacts';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n\n  const handleAddContact = newContact =>\n    setContacts(prevState => [...prevState, newContact]);\n\n  const handleCheckUnique = name => {\n    const existingContact = !!contacts.find(contact => contact.name === name);\n    existingContact && alert(`${name} is already in contacts`);\n    return !existingContact;\n  };\n\n  const handleDeleteContact = id => {\n    setContacts(contacts => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <Form onAdd={handleAddContact} isUnique={handleCheckUnique} />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactsList contacts={contacts} onDelete={handleDeleteContact} />\n        <Filter />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container___cwBN\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}